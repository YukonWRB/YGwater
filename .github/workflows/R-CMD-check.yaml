# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

permissions: read-all

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-latest,   r: 'release'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck, any::R.utils
          needs: check

      - name: Set up PostgreSQL 17
        uses: ikalnytskyi/action-setup-postgres@v7
        with:
          postgres-version: '17'
          username: runner
          password: runner
          database: testdb
      
      - name: Install PostGIS (with raster) for PostgreSQL 17
        if: runner.os == 'Linux'
        run: |
          set -eux
          # PGDG repo for versioned PG/PostGIS packages
          sudo sh -c 'echo "deb [arch=amd64] http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          wget -qO- https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo tee /etc/apt/trusted.gpg.d/postgres.asc >/dev/null
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \ postgresql-17-postgis-3 postgresql-17-postgis-3-scripts

      - name: Enable PostGIS (core + raster)
        env:
          PGPASSWORD: runner
        run: |
          set -eux
          psql -h 127.0.0.1 -U runner -d testdb -c "CREATE EXTENSION IF NOT EXISTS postgis;"
          psql -h 127.0.0.1 -U runner -d testdb -c "CREATE EXTENSION IF NOT EXISTS postgis_raster;"
          
      - name: Decompress CI seed database (Uses R for cross-platform functionality)
        run: |
          Rscript -e "R.utils::gunzip('tests/testthat/fixtures/test_db.sql.gz')"

      - name: Load test database
        env:
          PGPASSWORD: runner
        run: |
          psql -h 127.0.0.1 -U runner -d testdb -f tests/testthat/fixtures/test_db.sql

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          build_args: 'c("--no-manual","--compact-vignettes=gs+qpdf")'
